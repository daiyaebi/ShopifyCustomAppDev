import * as Options from '../options';
import { BaseService } from '../infrastructure';
import { Theme } from '../interfaces';
/**
 * A service for manage Shopify shop's theme.
 */
export declare class Themes extends BaseService {
    constructor(shopDomain: string, accessToken: string);
    /**
     * Creates a theme by providing the public URL of a ZIP file that contains the theme.
     * @param themes The theme being created.
     */
    create(theme: Options.ThemeCreateOptions): Promise<Theme>;
    /**
     * Gets a tsingle hemes with the given id.
     * @param id Id of the theme to retrieve.
     * @param options Options for filtering the result.
     */
    get(id: number, options?: Options.ThemeGetOptions): Promise<Partial<Theme>>;
    /**
     * Updates an existing theme.
     * @param id Id of the themes being updated.
     * @param themes The updated theme.
     */
    update(id: number, themes: Partial<Theme>): Promise<Theme>;
    /**
     * Gets a list of all themes on the shop.
     * @param options Options for filtering the results.
     */
    list(options?: Options.ThemeListOptions): Promise<Partial<Theme>[]>;
    /**
     * Deletes the themes with the given id.
     * @param id Id of the theme being deleted.
     */
    delete(id: number): Promise<undefined>;
}
export default Themes;
