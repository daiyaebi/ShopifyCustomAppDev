import * as Options from '../options';
import { BaseService } from '../infrastructure';
import { Checkout } from '../interfaces';
/**
 * A service for manipulating Shopify's Checkout API.
 * If the app is not a Sales Channel app, only the GET methods are available. PUT, and POST requests will return `422 unprocessable entity` errors.
 */
export declare class Checkouts extends BaseService {
    constructor(shopDomain: string, accessToken: string);
    /**
     * Creates a new checkout.
     */
    create(checkout: Partial<Checkout>): Promise<Checkout>;
    /**
     * Updates a checkout.
     */
    update(token: string, checkout: Partial<Checkout>): Promise<Checkout>;
    /**
     * Completes a checkout.
     */
    complete(token: string): Promise<Checkout>;
    /**
     * Gets a checkout with the given token.
     * @param token The token of the checkout to get.
     * @param options Options for filtering the result.
     */
    get(token: string, options?: Options.CheckoutGetOptions): Promise<Checkout>;
    /**
     * Retrieves a list of up to 250 checkouts.
     * @param options Options for pagination and filtering the result.
     */
    list(options?: Options.CheckoutListOptions): Promise<Checkout[]>;
}
export default Checkouts;
