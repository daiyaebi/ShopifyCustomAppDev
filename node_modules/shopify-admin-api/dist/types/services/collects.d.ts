import * as Options from '../options';
import { BaseService } from '../infrastructure';
import { Collect } from '../interfaces';
/**
 * A service for manipulating Shopify's Collect API.
 */
export declare class Collects extends BaseService {
    constructor(shopDomain: string, accessToken: string);
    /**
     * Creates a new collect object, connecting a product to a custom collection.
     */
    create(collect: Partial<Collect>): Promise<Collect>;
    /**
     * Gets a count of collects
     * @param id The id of the collect to get.
     * @param options Options for filtering the result.
     */
    count(options?: Options.CollectCountOptions): Promise<number>;
    /**
     * Gets a collect with the given id.
     * @param id The id of the collect to get.
     * @param options Options for filtering the result.
     */
    get(id: number, options?: Options.CollectGetOptions): Promise<Collect>;
    /**
     * Retrieves a list of up to 250 collects.
     * @param options Options for pagination and filtering the result.
     */
    list(options?: Options.CollectListOptions): Promise<Collect[]>;
}
export default Collects;
