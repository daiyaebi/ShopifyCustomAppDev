import * as Options from '../options';
import { BaseService } from '../infrastructure';
import { UsageCharge } from '../interfaces';
/**
 * A service for manipulating Shopify's UsageCharges API.
 */
export declare class UsageCharges extends BaseService {
    constructor(shopDomain: string, accessToken: string);
    /**
     * Creates a new charge.
     * @param recurringChargeId The id of the recurring charge that this usage charge belongs to.
     */
    create(recurringChargeId: number, charge: Partial<UsageCharge>): Promise<UsageCharge>;
    /**
     * Gets a charge with the given id.
     * @param recurringChargeId The id of the recurring charge that this usage charge belongs to.
     * @param id The id of the charge to get.
     * @param options Options for filtering the result.
     */
    get(recurringChargeId: number, id: number, options?: Options.FieldOptions): Promise<UsageCharge>;
    /**
     * Retrieves a list of all charges.
     * @param recurringChargeId The id of the recurring charge that this usage charge belongs to.
     * @param options Options for filtering the result.
     */
    list(recurringChargeId: number, options?: Options.FieldOptions): Promise<UsageCharge[]>;
}
export default UsageCharges;
