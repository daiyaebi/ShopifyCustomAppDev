import * as Options from '../options';
import { BaseService } from '../infrastructure';
import { PriceRule } from '../interfaces';
/**
 * A service for manipulating Shopify Price Rules.
 */
export declare class PriceRules extends BaseService {
    constructor(shopDomain: string, accessToken: string);
    /**
     * Gets a list of up to 250 of the shop's Price Rules.
     * @param options Options for filtering the results.
     */
    list(options?: Options.ListOptions & Options.FieldOptions): Promise<PriceRule[]>;
    /**
     * The API is currently restricted to what the Shopify Discounts admin section offers. Note that for
     * a price rule to be accessible via the admin section of Shopify, you will need to create a
     * discount code as well.
     */
    create(priceRule: Partial<PriceRule>): Promise<PriceRule>;
    /**
     * Retrieves the Price Rule with the given id.
     * @param options Options for filtering the results.
     */
    get(id: number): Promise<PriceRule>;
    /**
     * Updates the Price Rule with the given id.
     * @param tag The updated Price Rule.
     */
    update(id: number, PriceRule: Partial<PriceRule>): Promise<PriceRule>;
    /**
     * Deletes the Price Rule with the given id.
     */
    delete(id: number): Promise<undefined>;
}
export default PriceRules;
